Drop
Table Emp; 
Drop
Table Dept;
Drop
Table Bonus;
Drop
Table SalGrade;
CREATE
TABLE DEPT
(DEPTNO int CONSTRAINT PK_DEPT PRIMARY KEY,
DNAME 
VARCHAR(20) ,
LOC 
VARCHAR(20) ) ;
CREATE TABLE EMP
(EMPNO int CONSTRAINT PK_EMP PRIMARY KEY,
ENAME 
VARCHAR(30),
JOB 
VARCHAR(20),
MGR 
int,
HIREDATE 
DATE,
SAL 
int,
COMM 
int,
DEPTNO 
int CONSTRAINT FK_DEPTNO REFERENCES DEPT);
INSERT INTO DEPT VALUES(10,'ACCOUNTING','NEW YORK');
INSERT
INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT
INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT
INTO DEPT VALUES (40,'OPERATIONS','BOSTON');
INSERT
INTO EMP VALUES(7369,'SMITH','CLERK',7902,convert(datetime, '17-12-1980', 103),800,NULL,20);
INSERT
INTO EMP VALUES(7499,'ALLEN','SALESMAN',7698,convert(datetime, '20-2-1981', 103),1600,300,30);
INSERT
INTO EMP VALUES(7521,'WARD','SALESMAN',7698,convert(datetime, '22-2-1981', 103) ,1250,500,30);
INSERT
INTO EMP VALUES(7566,'JONES','MANAGER',7839,convert(datetime, '2-4-1981', 103) ,2975,NULL,20);
INSERT
INTO EMP VALUES(7654,'MARTIN','SALESMAN',7698,convert(datetime, '28-9-1981', 103) ,1250,1400,30);
INSERT
INTO EMP VALUES(7698,'BLAKE','MANAGER',7839,convert(datetime, '1-5-1981', 103) ,2850,NULL,30);
INSERT
INTO EMP VALUES(7782,'CLARK','MANAGER',7839,convert(datetime, '9-6-1981', 103) ,2450,NULL,10);
INSERT
INTO EMP VALUES(7788,'SCOTT','ANALYST',7566,convert(datetime, '13-7-1987', 103),3000,NULL,20);
INSERT
INTO EMP VALUES(7839,'KING','PRESIDENT',NULL,convert(datetime, '17-11-1981', 103) ,5000,NULL,10);
INSERT
INTO EMP VALUES(7844,'TURNER','SALESMAN',7698,convert(datetime, '8-9-1981', 103) ,1500,0,30);
INSERT
INTO EMP VALUES(7876,'ADAMS','CLERK',7788,convert(datetime, '13-7-1987', 103),1100,NULL,20);
INSERT
INTO EMP VALUES(7900,'JAMES','CLERK',7698,convert(datetime, '3-12-1981', 103) ,950,NULL,30);
INSERT
INTO EMP VALUES(7902,'FORD','ANALYST',7566,convert(datetime, '3-12-1981', 103) ,3000,NULL,20);
INSERT
INTO EMP VALUES(7934,'MILLER','CLERK',7782,convert(datetime, '23-1-1982', 103),1300,NULL,10);
CREATE
TABLE BONUS( ENAME VARCHAR(10) , JOB VARCHAR(9), SAL Int, COMM int ) ;
CREATE
TABLE SALGRADE( GRADE int,LOSAL int, HISAL int );
INSERT
INTO SALGRADE VALUES (1,700,1200);
INSERT
INTO SALGRADE VALUES (2,1201,1400);
INSERT
INTO SALGRADE VALUES (3,1401,2000);
INSERT
INTO SALGRADE VALUES (4,2001,3000);
INSERT
INTO SALGRADE VALUES (5,3001,9999);
COMMIT
;

select DNAME,ENAME from DEPT d join emp e on d.DEPTNO = e.DEPTNO
use ScottDB
select * from  [dbo].[BONUS]
select * from [dbo].[DEPT]
select * from [dbo].[EMP]
 
select * from [dbo].[SALGRADE]

--1 display total number of records in emp table?
select count(EMPNO) from [dbo].[EMP] 
--2DISPLAY ENAME,COMM IN EMP TABLE.DISPLAY ZERO IN PLACE OF NULL
SELECT [ENAME],[COMM], ISNULL(COMM,0) AS UPDATED FROM [dbo].[EMP]

--3DISPLAY ENAME,COMM, IN EMP TABLE.DISPLAY NOT ELIGIBLE IN PLACE OF NULL
SELECT [ENAME],[COMM],COALESCE (CAST(COMM AS VARCHAR(20)),1,'NOT ELIGIBLE') FROM EMP

--4DISPLAY ALL THE EMPLOYEES WHERE THEIR SALARY IS LESS THAN THE SCOTT SALARY 
SELECT ENAME,SAL FROM[dbo].[EMP] WHERE 
SAL <( SELECT SAL
FROM EMP WHERE 
ENAME = 'SCOTT')  

--5 WRITE A QUERY TO DISPLAY CURRENT DATE
SELECT GETDATE();
SELECT CURRENT_TIMESTAMP;

--6 SHOW ALL THE DATA OF THE CLERKS WHO HAVE BEEN HIRED AFTER THE YEAR 1981

SELECT * FROM [dbo].[EMP] WHERE YEAR(HIREDATE) >1981;

--7 SHOW THE NAME , JOB ,SALARY, AND COMMISION OF THOSE EMPLOYEES WHO EARN COMMISION.SORT THE DATA BY SALARY IN DESC ORDER
SELECT ENAME,JOB,SAL,COMM FROM EMP WHERE COMM IS NOT NULL ORDER BY SAL DESC;

--8 SHOW ALL THE EMPLOYEES THAT HAVE NO COMMISION WITH A 10% RAISE SALARY(ROUND OFF THE SALARIES)
SELECT ENAME,COMM,SAL,ROUND(SAL+(0.01*SAL),2) AS RAISED_SAL FROM EMP WHERE COMM IS NULL

--9 SHOW THE NAMES OF ALL EMPLOYEES TOGETHER WITH NUMBER OF YEARS AND THE NUMBER OF COMPLETED MONTHS THAT THEY HAVE BEEN EMPLOYED
SELECT ENAME,DATEDIFF(MONTH,HIREDATE,GETDATE()) AS MONTHS,DATEDIFF(YEAR,HIREDATE,GETDATE()) AS YEARS FROM EMP



SELECT ENAME,DATEDIFF(MONTH,HIREDATE,GETDATE())/12 AS YEARS
FROM EMP 

SELECT ENAME,DATEDIFF(YEAR,HIREDATE,GETDATE()) AS YEARS, DATEDIFF(MONTH,HIREDATE,GETDATE())/12 AS MONTHS FROM EMP
--10 SHOW THOSE EMPLOYEES THAT HAVE A NAME STARTING WITH J,K,L OR M
SELECT ENAME FROM EMP WHERE ENAME LIKE 'J%' OR  ENAME LIKE'K%' OR  ENAME LIKE  'L%' OR ENAME LIKE  'M%'


-- 11 SHOW ALL EMPLOYEES AND INDICATE WITH YES OR NO WHETHER THEY RECIEVE A COMMISSION 
SELECT ENAME,
IIF
(COMM IS NOT NULL ,'YES','NO') AS COMMISSION FROM EMP

--12 HOW MANY EMPLOYEES HAVE A NAME THAT ENDS WITH AN N? CREATE 2 POSSIBLE SOLUTIONS
SELECT ENAME FROM EMP WHERE ENAME LIKE '%N' 
--OR 
SELECT ENAME FROM EMP WHERE RIGHT(ENAME,1) ='N'

--13 Show all employees who were hired in the first half of the month (before the 16th of the month).
SELECT * FROM EMP WHERE DAY(HIREDATE) <16
--14. Show the names, salaries and the number of dollars that all employees earn.
SELECT ENAME,'$' + CAST(SAL AS VARCHAR(10))  FROM EMP
--15. Find the second highest salary.

SELECT TOP 1 SAL FROM
(SELECT SAL,DENSE_RANK() OVER(ORDER BY SAL DESC) AS SALARYRANK FROM EMP)
EMP
WHERE SALARYRANK = 2
--OR

SELECT MAX(SAL) AS SecondHighestSalary
FROM EMP
WHERE SAL < (
    SELECT MAX(SAL)
    FROM EMP
)


--16. How to list the top 10 employees in employee object.
SELECT TOP 10 * FROM EMP
--17. Getting Second highest Salary from table with fields empid, Name and Salary
SELECT ENAME,EMPNO,SAL FROM EMP WHERE SAL = (SELECT TOP 1 SAL FROM
(SELECT SAL,DENSE_RANK() OVER(ORDER BY SAL DESC) AS SALARYRANK FROM EMP)
AS UPDATED
WHERE SALARYRANK = 2)

--18. Show Empno, Ename, Job, Comm, Deptname, Salgrade for all employees.
SELECT EMPNO,ENAME,JOB,COMM,DNAME,GRADE FROM DEPT AS D JOIN EMP AS E ON D.DEPTNO=E.DEPTNO
JOIN SALGRADE AS S ON E.SAL  BETWEEN S.LOSAL AND S.HISAL ORDER BY 
S.GRADE DESC;
--19. Show Empno, Ename, Job, Comm, Deptname, Salgrade for all employees sort by Deptno and Salary.
SELECT E.DEPTNO,EMPNO,ENAME,JOB,COMM,DNAME,GRADE FROM DEPT AS D JOIN EMP AS E ON D.DEPTNO=E.DEPTNO
JOIN SALGRADE AS S ON E.SAL  BETWEEN S.LOSAL AND S.HISAL ORDER BY D.DEPTNO,E.SAL
--20. Display all employees and corresponding managers 
SELECT A.ENAME AS EMPLOYEEName, B.EName AS MANAGERS, A.MGR
FROM EMP A, EMP B
WHERE A.ENAME<> B.ENAME
AND A.MGR = B.MGR
ORDER BY A.MGR;
--21. Display all employees where jobs does not belong to PRESIDENT and MANAGER?
SELECT * FROM EMP WHERE JOB NOT IN ('PRESIDENT','MANAGER')
--22. Display all the departments where department has atleast 4 employees?
SELECT DNAME FROM DEPT AS D JOIN EMP AS E ON D.DEPTNO=E.DEPTNO GROUP BY DNAME HAVING COUNT(*) >=4

--23. Display all department with Minimum salary and maximum salary?

SELECT DNAME,MIN(SAL) AS MINIMUM_SALARY,MAX(SAL) AS MAXIMUM_SALARY
FROM EMP AS E JOIN DEPT AS D 
ON E.DEPTNO = D.DEPTNO 
GROUP BY DNAME
---24. Display all employees those who are not managers?
SELECT * FROM EMP WHERE JOB NOT IN ('MANAGER')
---25. Create table emp1 with same structure of emp table. Do not copy the data
CREATE TABLE EMP1 (
EMPNO INT CONSTRAINT PK1_EMP PRIMARY KEY,
ENAME VARCHAR(40),
JOB VARCHAR(20),
MGR INT,
HIREDATE DATE,
SAL INT,
COMM INT,
DEPTNO INT  CONSTRAINT FK1_DEPTNO REFERENCES DEPT)
--26. Increase the salary 8% for employee those who are earning commission less then 900
SELECT *,ROUND(1.08*SAL,2)AS UPDATED_SAL FROM EMP WHERE COMM < 900

--27. Increase 150$ commission for BLAKE's team
SELECT *,COALESCE(COMM,150) FROM EMP WHERE ENAME = 'BLAKE';

--28. Increase 2% salary for employee who is making lowest salary in dept 10
SELECT ENAME,EMPNO,((SAL*0.02)+SAL) AS UPDATED FROM EMP WHERE DEPTNO = 10
AND SAL = (SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 10)


-- CREATE 2 NEW TABLES WITH THE NAMES OF ADDRESS AND STATE AND INSERT 10 RECORDS IN EACH
---address table
 CREATE TABLE ADDRESS
(
 AddID int PRIMARY KEY,
 street varchar(30),
 city varchar(20),
 stateid int FOREIGN KEY REFERENCES STATE(STATE_ID), 
 zip_code varchar(5),
 empno int FOREIGN KEY REFERENCES EMP(EMPNO)
 )

--State Table
CREATE TABLE STATE
(
 STATE_ID int PRIMARY KEY,
 code varchar(20),
 name varchar(20)
 )

--inserting values
insert INTO Address VALUES 
(1, 'Main St', 'New York', 1, '10001', 7369),
(2, 'Broadway', 'New York', 1, '10002', 7499),
(3, 'Oak St', 'Los Angeles', 2, '90001', 7521),
(4, 'Pine St', 'Los Angeles', 2, '90002', 7566),
(5, 'Main St', 'Chicago', 3, '60601', 7654),
(6, 'State St', 'Chicago', 3, '60602', 7698),
(7, 'First St', 'San Francisco', 4, '94101', 7782),
(8, 'Market St', 'San Francisco', 4, '94102', 7788),
(9, 'Elm St', 'Houston', 5, '77001', 7839),
(10, 'Main St', 'Houston', 5, '77002', 7844);


INSERT  INTO STATE VALUES
(1, 'NY', 'New York'),
(2, 'CA', 'California'),
(3, 'IL', 'Illinois'),
(4, 'CA', 'California'),
(5, 'TX', 'Texas'),
(6, 'FL', 'Florida'),
(7, 'MA', 'Massachusetts'),
(8, 'PA', 'Pennsylvania'),
(9, 'OH', 'Ohio'),
(10, 'GA', 'Georgia');

DROP TABLE Address;
DROP TABLE State;